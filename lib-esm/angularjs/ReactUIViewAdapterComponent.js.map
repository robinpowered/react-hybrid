{
  "version": 3,
  "file": "ReactUIViewAdapterComponent.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/angularjs/ReactUIViewAdapterComponent.tsx"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as React from 'react';\nimport * as angular from 'angular';\nimport * as ReactDOM from 'react-dom';\nimport { hybridModule } from './module';\nimport { UIView, UIViewProps, UIRouterConsumer, UIViewConsumer } from '@uirouter/react';\nimport { filter } from '@uirouter/core';\nimport { UIRouterContextComponent } from '../react/UIRouterReactContext';\n\n// When an angularjs `ui-view` is instantiated, also create an react-ui-view-adapter (which creates a react UIView)\nhybridModule.directive('uiView', function() {\n  return {\n    restrict: 'AE',\n    compile: function(tElem, tAttrs) {\n      let { name, uiView } = tAttrs;\n      name = name || uiView || '$default';\n      // console.log('Creating react-ui-view-adapter', tElem);\n      tElem.html(`<react-ui-view-adapter name=\"${name}\"></react-ui-view-adapter>`);\n    },\n  };\n});\n\nvar id = 0;\n\n// This angularjs adapter (inside an angularjs ui-view) creates the react UIView and provides it the correct context\n// It also allows angularjs children created inside the react view (via angular2react or whatever) to access the correct\n// context from the react UIView\nhybridModule.directive('reactUiViewAdapter', function() {\n  return {\n    restrict: 'E',\n    link: function(scope, elem, attrs) {\n      const el = elem[0];\n      let _ref = null;\n      let destroyed = false;\n      const $id = id++;\n      const ignoredAttrKeys = ['$$element', '$attr'];\n      attrs = filter(attrs, (val, key) => ignoredAttrKeys.indexOf(key) === -1) as any;\n\n      // console.log(`${$id}: linking react-ui-view-adapter into `, el, attrs)\n\n      const log = (msg, UIViewRef) => {\n        const id = UIViewRef && UIViewRef.state && UIViewRef.state.id;\n        const cmp = UIViewRef && UIViewRef.componentInstance;\n        console.log(msg, `Has UIViewRef: ${!!UIViewRef}`, id, cmp);\n      };\n\n      // The UIView ref callback, which is called after the initial render\n      const ref = ref => {\n        if (ref && _ref === ref) return;\n        _ref = ref;\n\n        // log(`${$id}: received new React UIView ref:`, ref);\n\n        // Add the $uiView data to the adapter element to provide context to child angular elements\n        provideContextToAngularJSChildren();\n        renderReactUIView();\n      };\n\n      // The render callback for the React UIView\n      const render = (cmp, props: object) => {\n        // log('render', _ref);\n        provideContextToAngularJSChildren();\n        // Only create the children when the _ref is ready\n        return !_ref ? null : React.createElement(cmp, props);\n      };\n\n      const provideContextToAngularJSChildren = () => {\n        const $cfg = _ref && _ref.uiViewData && _ref.uiViewData.config;\n        const $uiView = _ref && _ref.uiViewAddress;\n        // console.log(`${$id}: providing context to angularjs children`, el, $cfg, $uiView);\n        if (!$cfg || !$uiView) {\n          elem.removeData('$uiView');\n        } else {\n          elem.data('$uiView', { $cfg, $uiView });\n        }\n      };\n\n      function renderReactUIView() {\n        // console.log(`${$id}: rendering react uiview into container`, el);\n        if (destroyed) {\n          // console.error(`${$id}: react-ui-view-adapter has already been destroyed -- not rendering React UIView`);\n          return;\n        }\n\n        const props = { ...attrs, render, wrap: false, refFn: ref };\n        // console.log(`${$id}: rendering ReactUIView with props`, props);\n        ReactDOM.render<any>(<ReactUIView {...props} />, el as any);\n      }\n\n      scope.$on('$destroy', () => {\n        destroyed = true;\n        const unmounted = ReactDOM.unmountComponentAtNode(el);\n        // console.log(`${$id}: angular $destroy event -- unmountComponentAtNode(): ${unmounted}`, el);\n        // Remove using jQLite element for cross-browser compatibility.\n        elem.remove();\n      });\n\n      renderReactUIView();\n    },\n  };\n});\n\nconst InternalUIView = UIView.__internalViewComponent;\n\nconst ReactUIView = ({ refFn, ...props }) => (\n  <UIRouterContextComponent parentContextLevel=\"3\">\n    <UIRouterConsumer>\n      {router => (\n        <UIViewConsumer>\n          {parentUiView => <InternalUIView {...props} ref={refFn} parentUIView={parentUiView} router={router} />}\n        </UIViewConsumer>\n      )}\n    </UIRouterConsumer>\n  </UIRouterContextComponent>\n);\n"
  ]
}
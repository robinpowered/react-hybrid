{
  "version": 3,
  "file": "UIRouterReactContextDecorator.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/UIRouterReactContextDecorator.tsx"
  ],
  "names": [],
  "mappings": "AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,wBAAwB,EAAE,MAAM,wBAAwB,CAAC;AAElE;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,MAAM,UAAU,eAAe,CAAC,SAA8D;IAC5F,OAAO,UAAA,KAAK,IAAI,OAAA,oBAAC,wBAAwB,QAAE,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAA4B,EAA5F,CAA4F,CAAC;AAC/G,CAAC",
  "sourcesContent": [
    "import * as React from 'react';\nimport { UIRouterContextComponent } from './UIRouterReactContext';\n\n/**\n * A decorator that provides the UIRouter state context allowing\n * React components to use the @uirouter/react components such as UISref\n *\n * Example:\n *\n * import { UISref, UISrefActive, UIView } from '@uirouter/react';\n *\n * @UIRouterContext\n * class MyComponent extends React.Component<any, any> {\n *   render() {\n *     return (\n *       <UISrefActive class=\"active\">\n *         <UISref to=\".neststate\" params={{ id: this.props.someid }}>\n *           <a>Go to item {this.props.someid}</a>\n *         </UISref>\n *       </UISrefActive>\n *\n *       <UIView/>\n *     )\n *   }\n * }\n *\n * @param Component the react component to wrap\n */\nexport function UIRouterContext(Component: { new (...args: any[]): React.Component<any, any> }): any {\n  return props => <UIRouterContextComponent>{React.createElement(Component, props)}</UIRouterContextComponent>;\n}\n"
  ]
}
{
  "version": 3,
  "file": "UIRouterReactContext.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/UIRouterReactContext.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;AACA,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAiB,cAAc,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACpH,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAc/B;;;;;GAKG;AACH;IAA8C,4CAG7C;IAHD;QAAA,qEA8EC;QAtEQ,WAAK,GAAmC;YAC7C,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,IAAI;YACZ,mBAAmB,EAAE,IAAI;SAC1B,CAAC;QAyBM,iBAAW,GAAG,UAAC,GAAgB;YACrC,IAAI,GAAG,IAAI,GAAG,KAAK,KAAI,CAAC,GAAG,EAAE;gBAC3B,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACf,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAChD,IAAM,MAAM,GAAG,KAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC7C,IAAM,mBAAmB,GAAG,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBAC9D,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,QAAA,EAAE,mBAAmB,qBAAA,EAAE,CAAC,CAAC;gBAC5D,oBAAoB;aACrB;QACH,CAAC,CAAC;;IAgCJ,CAAC;IA7DS,yDAAsB,GAA9B;QACE,IAAI,IAAI,CAAC,QAAQ;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3D,CAAC;IAEO,6DAA0B,GAAlC;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACnB,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACpD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAEjC,OAAO,GAAG,IAAI,KAAK,EAAE;YAAE,GAAG,GAAG,GAAG,CAAC,aAAa,CAAC;QAC/C,IAAM,OAAO,GAAG,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QACrE,OAAO,OAAO,IAAI,IAAI,0BAA0B,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;IAEM,oDAAiB,GAAxB;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,mBAAmB,EAAE,IAAI,CAAC,0BAA0B,EAAE;SACvD,CAAC,CAAC;IACL,CAAC;IAaO,8CAAW,GAAnB,UAAoB,KAAwB;QAA5C,iBAiBC;QAhBC,uCAAuC;QACvC,OAAO,CACL,oBAAC,gBAAgB,QACd,UAAA,sBAAsB,IAAI,OAAA,CACzB,oBAAC,gBAAgB,IAAC,KAAK,EAAE,sBAAsB,IAAI,KAAI,CAAC,KAAK,CAAC,MAAM;YAClE,oBAAC,cAAc,QACZ,UAAA,4BAA4B,IAAI,OAAA,CAC/B,oBAAC,cAAc,IAAC,KAAK,EAAE,4BAA4B,IAAI,KAAI,CAAC,KAAK,CAAC,mBAAmB,IAClF,KAAK,CACS,CAClB,EAJgC,CAIhC,CACc,CACA,CACpB,EAV0B,CAU1B,CACgB,CACpB,CAAC;IACJ,CAAC;IAEM,yCAAM,GAAb;QACU,IAAA,wBAAK,CAAgB;QACrB,IAAA,8BAAQ,CAAgB;QAEhC,IAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,6BAAK,GAAG,EAAE,IAAI,CAAC,WAAW,GAAI,CAAC;SACvC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iCAAM,QAAQ,CAAO,CAAC,CAAC;IACvG,CAAC;IAzEa,qCAAY,GAA4C;QACpE,kBAAkB,EAAE,GAAG;KACxB,CAAC;IAwEJ,+BAAC;CAAA,AA9ED,CAA8C,KAAK,CAAC,SAAS,GA8E5D;SA9EY,wBAAwB;AAgFrC;;;GAGG;AACH;IACE,oCAAoB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QACrC,IAAI,CAAC,OAAO;YAAE,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;IAC9G,CAAC;IAED,sBAAW,2CAAG;aAAd;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAW,+CAAO;aAAlB;YACE,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACtE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,MAAM,IAAI,KAAK,CACb,qGAAqG,CACtG,CAAC;aACH;YAED,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC;QACrF,CAAC;;;OAAA;IACH,iCAAC;AAAD,CAAC,AAnBD,IAmBC",
  "sourcesContent": [
    "import { UIViewData } from '@uirouter/angularjs/lib/directives/viewDirective';\nimport { UIRouterConsumer, UIRouterProvider, UIRouterReact, UIViewConsumer, UIViewProvider } from '@uirouter/react';\nimport * as angular from 'angular';\nimport * as React from 'react';\nimport { ReactElement } from 'react';\nimport IInjectorService = angular.auto.IInjectorService;\n\nexport interface IUIRouterContextComponentProps {\n  parentContextLevel?: string;\n}\n\nexport interface IUIRouterContextComponentState {\n  ready: boolean;\n  router?: UIRouterReact;\n  parentUIViewAddress?: any;\n}\n\n/**\n * Provide react context necessary for UIView, UISref and UISrefActive\n *\n * Gets the context from the parent react UIView (if component tree is all react)\n * Gets the context from the from parent angular ui-view if no parent reat UIView is available\n */\nexport class UIRouterContextComponent extends React.Component<\n  IUIRouterContextComponentProps,\n  IUIRouterContextComponentState\n> {\n  public static defaultProps: Partial<IUIRouterContextComponentProps> = {\n    parentContextLevel: '0',\n  };\n\n  public state: IUIRouterContextComponentState = {\n    ready: false,\n    router: null,\n    parentUIViewAddress: null,\n  };\n\n  private ref: HTMLElement;\n  private injector: IInjectorService;\n\n  private getRouterFromAngularJS(): UIRouterReact {\n    if (this.injector) return this.injector.get('$uiRouter');\n  }\n\n  private getParentViewFromAngularJS() {\n    let ref = this.ref;\n    let steps = parseInt(this.props.parentContextLevel);\n    steps = isNaN(steps) ? 0 : steps;\n\n    while (ref && steps--) ref = ref.parentElement;\n    const $uiView = ref && angular.element(ref).inheritedData('$uiView');\n    return $uiView && new ParentUIViewAddressAdapter($uiView);\n  }\n\n  public componentDidMount() {\n    this.setState({\n      parentUIViewAddress: this.getParentViewFromAngularJS(),\n    });\n  }\n\n  private refCallback = (ref: HTMLElement) => {\n    if (ref && ref !== this.ref) {\n      this.ref = ref;\n      this.injector = angular.element(ref).injector();\n      const router = this.getRouterFromAngularJS();\n      const parentUIViewAddress = this.getParentViewFromAngularJS();\n      this.setState({ ready: true, router, parentUIViewAddress });\n      // console.log(ref);\n    }\n  };\n\n  private renderChild(child: ReactElement<any>) {\n    // console.log('renderChild()', child);\n    return (\n      <UIRouterConsumer>\n        {routerFromReactContext => (\n          <UIRouterProvider value={routerFromReactContext || this.state.router}>\n            <UIViewConsumer>\n              {parentUIViewFromReactContext => (\n                <UIViewProvider value={parentUIViewFromReactContext || this.state.parentUIViewAddress}>\n                  {child}\n                </UIViewProvider>\n              )}\n            </UIViewConsumer>\n          </UIRouterProvider>\n        )}\n      </UIRouterConsumer>\n    );\n  }\n\n  public render() {\n    const { ready } = this.state;\n    const { children } = this.props;\n\n    const childrenCount = React.Children.count(children);\n    if (!ready) {\n      return <div ref={this.refCallback} />;\n    }\n\n    return this.renderChild(childrenCount === 1 ? React.Children.only(children) : <div>{children}</div>);\n  }\n}\n\n/**\n * Get the fqn and context from the parent angularjs ui-view.\n * Uses the ui-view element's data\n */\nclass ParentUIViewAddressAdapter {\n  constructor(private _ngdata: UIViewData) {\n    if (!_ngdata) throw new Error('@uirouter/react-hybrid: Address Adapter created with no _ngdata parameter.');\n  }\n\n  public get fqn() {\n    return this._ngdata.$uiView.fqn;\n  }\n\n  public get context() {\n    if (!this._ngdata || !this._ngdata.$cfg || !this._ngdata.$cfg.viewDecl) {\n      console.log(this._ngdata);\n      throw new Error(\n        '@uirouter/react-hybrid: Uh oh. Views are in an invalid state. Parent UIView has no $cfg or viewDecl'\n      );\n    }\n\n    return this._ngdata.$cfg.viewDecl.$context || this._ngdata.$uiView.creationContext;\n  }\n}\n"
  ]
}
{
  "version": 3,
  "file": "AngularUIView.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/AngularUIView.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AACnD,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,IAAI,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;AACpC,YAAY,CAAC,GAAG,CAAC;IACf,WAAW;IACX,UAAA,WAAW;QACT,SAAS,GAAG,WAAW,CAAC;QACxB,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;CACF,CAAC,CAAC;AAEH;;;GAGG;AACH;IAAmC,iCAAyB;IAC1D,uBAAY,KAAK;QAAjB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE;SAC1B,CAAC;;IACJ,CAAC;IAED,8BAAM,GAAN;QACE,IAAM,eAAwC,EAAtC,wBAAS,EAAE,qCAA2B,CAAC;QAE/C,IAAI,KAAK,gBACJ,SAAS,IACZ,KAAK,EAAE,SAAS,EAChB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAC7B,CAAC;QAEF,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAO,GAAP,UAAQ,GAAY;QAClB,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,4CAAoB,GAApB;QACE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;IAED,uBAAuB;IACvB,6CAAqB,GAArB;QACE,OAAO,KAAK,CAAC;IACf,CAAC;IACH,oBAAC;AAAD,CAAC,AAjCD,CAAmC,KAAK,CAAC,SAAS,GAiCjD",
  "sourcesContent": [
    "import { hybridModule } from '../angularjs/module';\nimport * as React from 'react';\n\nlet $injector, $rootScope, $compile;\nhybridModule.run([\n  '$injector',\n  _$injector_ => {\n    $injector = _$injector_;\n    $rootScope = _$injector_.get('$rootScope');\n    $compile = _$injector_.get('$compile');\n  },\n]);\n\n/**\n * A React component which renders an AngularJS <ui-view>\n * This was heavily influenced by https://github.com/coatue-oss/angular2react\n */\nexport class AngularUIView extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      $scope: $rootScope.$new(),\n    };\n  }\n\n  render() {\n    const { className, ...restProps } = this.props;\n\n    let props = {\n      ...restProps,\n      class: className,\n      ref: this.compile.bind(this),\n    };\n\n    return React.createElement('ui-view', props);\n  }\n\n  compile(ref: Element) {\n    $compile(ref)(this.state.$scope);\n  }\n\n  componentWillUnmount() {\n    this.state.$scope.$destroy();\n  }\n\n  /** Only render once */\n  shouldComponentUpdate() {\n    return false;\n  }\n}\n"
  ]
}
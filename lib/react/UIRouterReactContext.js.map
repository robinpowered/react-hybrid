{
  "version": 3,
  "file": "UIRouterReactContext.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/UIRouterReactContext.tsx"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as angular from 'angular';\nimport * as React from 'react';\nimport { ReactNode, useContext, useRef, useState } from 'react';\nimport { UIViewData } from '@uirouter/angularjs/lib/directives/viewDirective';\nimport { UIRouterContext, UIViewContext, UIViewAddress } from '@uirouter/react';\nimport { UIRouter } from '@uirouter/core';\n\nexport interface IUIRouterContextComponentProps {\n  parentContextLevel?: string;\n  inherited?: boolean;\n}\n\ninterface IContextFromAngularJS {\n  router: UIRouter;\n  addr: UIViewAddress;\n}\nconst initialState: IContextFromAngularJS = { router: undefined, addr: undefined };\n\n/**\n * Provide react context necessary for UIView, UISref and UISrefActive\n *\n * Gets the context from the parent react UIView (if component tree is all react)\n * Gets the context from the from parent angular ui-view if no parent reat UIView is available\n */\nexport function UIRouterContextComponent(props: {\n  parentContextLevel: string;\n  inherited: boolean;\n  children: ReactNode;\n}) {\n  const { parentContextLevel, inherited, children } = props;\n  const [contextFromAngularJS, setContextFromAngularJS] = useState(initialState);\n  const routerFromReactContext = useContext(UIRouterContext);\n  const parentUIViewFromReactContext = useContext(UIViewContext);\n  const domRef = useRef(null);\n\n  // Once we have a DOM node, get the AngularJS injector and walk up the DOM to find the AngularJS $uiView\n  const refCallback = (el: HTMLElement) => {\n    if (el && el !== domRef.current) {\n      domRef.current = el;\n      const injector = angular.element(el).injector();\n\n      // get router from angularjs\n      const router = injector?.get('$uiRouter');\n\n      // get parent uiview from angularjs\n      let steps = parseInt(parentContextLevel, 10);\n      steps = isNaN(steps) ? 0 : steps;\n\n      while (el && steps--) el = el.parentElement;\n      const $uiView = el && angular.element(el).inheritedData('$uiView');\n      const addr = $uiView && new ParentUIViewAddressAdapter($uiView);\n\n      setContextFromAngularJS({ router, addr } as IContextFromAngularJS);\n    }\n  };\n\n  // render a div once to get a ref into the dom\n  // Use the dom ref to access the AngularJS state\n  if (!domRef.current) {\n    return <div ref={refCallback} />;\n  }\n\n  // We know the AngularJS state. Now render the {children}\n  const childrenCount = React.Children.count(children);\n\n  return (\n    <UIRouterContext.Provider value={(inherited && routerFromReactContext) || contextFromAngularJS.router}>\n      <UIViewContext.Provider value={(inherited && parentUIViewFromReactContext) || contextFromAngularJS.addr}>\n        {childrenCount === 1 ? React.Children.only(children) : <div>{children}</div>}\n      </UIViewContext.Provider>\n    </UIRouterContext.Provider>\n  );\n}\n\nUIRouterContextComponent.defaultProps = {\n  parentContextLevel: '0',\n  inherited: true,\n} as IUIRouterContextComponentProps;\n\n/**\n * Get the fqn and context from the parent angularjs ui-view.\n * Uses the ui-view element's data\n */\nclass ParentUIViewAddressAdapter {\n  constructor(private _ngdata: UIViewData) {\n    if (!_ngdata) throw new Error('@uirouter/react-hybrid: Address Adapter created with no _ngdata parameter.');\n  }\n\n  public get fqn() {\n    return this._ngdata.$uiView.fqn;\n  }\n\n  public get context() {\n    if (!this._ngdata || !this._ngdata.$cfg || !this._ngdata.$cfg.viewDecl) {\n      console.log(this._ngdata);\n      throw new Error(\n        '@uirouter/react-hybrid: Uh oh. Views are in an invalid state. Parent UIView has no $cfg or viewDecl'\n      );\n    }\n\n    return this._ngdata.$cfg.viewDecl.$context || this._ngdata.$uiView.creationContext;\n  }\n}\n"
  ]
}
{
  "version": 3,
  "file": "UIViewMonkeyPatch.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/UIViewMonkeyPatch.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,yCAAyC;AACzC,iDAAgD;AAEhD;;;;;;;;;;;;;;;GAeG;AACH,IAAM,UAAU,GAAG,cAAM,CAAC,SAAS,CAAC,MAAM,CAAC;AAE3C,cAAM,CAAC,SAAS,CAAC,MAAM,GAAG;IACxB,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE;QAC7B,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;KAC1C;IAED,OAAO,oBAAC,6BAAa,eAAK,IAAI,CAAC,KAAK,EAAI,CAAC;AAC3C,CAAC,CAAC",
  "sourcesContent": [
    "import * as React from 'react';\nimport { UIView } from '@uirouter/react';\nimport { AngularUIView } from './AngularUIView';\n\n/**\n * Monkey patches the @uirouter/react UIView such that:\n *\n * When a @uirouter/react `<UIView/>` is rendered (from react code),\n * it renders first to an AngularJS `<ui-view>` component,\n * inside the `ui-view` is an AngularJS `<react-ui-view-adapter>`,\n * which finally renders a real @uirouter/react `<UIView/>`:\n *\n * <ui-view name=\"name\">\n *   <react-ui-view-adapter name=\"name\">\n *     <UIView wrap={false} name=\"name\">\n *       <RoutedReactComponent/>\n *     </UIView>\n *   </react-ui-view-adapter>\n * </ui-view>\n */\nconst realRender = UIView.prototype.render;\n\nUIView.prototype.render = function() {\n  if (this.props.wrap === false) {\n    return realRender.apply(this, arguments);\n  }\n\n  return <AngularUIView {...this.props} />;\n};\n"
  ]
}
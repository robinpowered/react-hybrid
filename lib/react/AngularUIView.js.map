{
  "version": 3,
  "file": "AngularUIView.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/AngularUIView.tsx"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAE/B,8CAAmD;AAGnD,IAAI,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC;AACpC,qBAAY,CAAC,GAAG,CAAC;IACf,WAAW;IACX,UAAA,WAAW;QACT,SAAS,GAAG,WAAW,CAAC;QACxB,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC3C,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;CACF,CAAC,CAAC;AAWH;;;GAGG;AACH;IAAmC,iCAAoC;IAGrE,uBAAY,KAA0B;QAAtC,YACE,kBAAM,KAAK,CAAC,SAEb;QALO,YAAM,GAAiB,UAAU,CAAC,IAAI,EAAE,CAAC;QAI/C,KAAI,CAAC,MAAM,CAAC,8BAA8B,GAAG,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;;IACrE,CAAC;IAED,4CAAoB,GAApB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzB,CAAC;IAED,8BAAM,GAAN;QAAA,iBAMC;QALC,IAAM,eAAwC,EAAtC,wBAAS,EAAE,qCAA2B,CAAC;QAC/C,IAAM,GAAG,GAAG,UAAC,OAAgB,IAAK,OAAA,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,EAA9B,CAA8B,CAAC;QAEjE,IAAM,KAAK,gBAAQ,SAAS,IAAE,KAAK,EAAE,SAAS,EAAE,GAAG,KAAA,GAAE,CAAC;QACtD,OAAO,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,uBAAuB;IACvB,6CAAqB,GAArB;QACE,OAAO,KAAK,CAAC;IACf,CAAC;IACH,oBAAC;AAAD,CAAC,AAxBD,CAAmC,KAAK,CAAC,SAAS,GAwBjD;AAxBY,sCAAa",
  "sourcesContent": [
    "import * as React from 'react';\nimport { IScope } from 'angular';\nimport { hybridModule } from '../angularjs/module';\nimport { PortalView } from './PortalView';\n\nlet $injector, $rootScope, $compile;\nhybridModule.run([\n  '$injector',\n  _$injector_ => {\n    $injector = _$injector_;\n    $rootScope = _$injector_.get('$rootScope');\n    $compile = _$injector_.get('$compile');\n  },\n]);\n\ninterface IAngularUIViewProps {\n  portalView?: PortalView;\n  className?: string;\n}\n\nexport interface IPortalScope extends IScope {\n  $uiRouterReactHybridPortalView?: PortalView;\n}\n\n/**\n * A React component which renders an AngularJS <ui-view>\n * This was heavily influenced by https://github.com/coatue-oss/angular2react\n */\nexport class AngularUIView extends React.Component<IAngularUIViewProps> {\n  private $scope: IPortalScope = $rootScope.$new();\n\n  constructor(props: IAngularUIViewProps) {\n    super(props);\n    this.$scope.$uiRouterReactHybridPortalView = this.props.portalView;\n  }\n\n  componentWillUnmount() {\n    this.$scope.$destroy();\n  }\n\n  render() {\n    const { className, ...restProps } = this.props;\n    const ref = (htmlRef: Element) => $compile(htmlRef)(this.$scope);\n\n    const props = { ...restProps, class: className, ref };\n    return React.createElement('ui-view', props);\n  }\n\n  /** Only render once */\n  shouldComponentUpdate() {\n    return false;\n  }\n}\n"
  ]
}
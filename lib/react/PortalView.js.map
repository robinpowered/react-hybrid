{
  "version": 3,
  "file": "PortalView.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/react/PortalView.tsx"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UIViewProps } from '@uirouter/react';\nimport { debugLog } from '../debug';\nimport { AngularUIView } from './AngularUIView';\nimport { IReactUIViewProps, ReactUIView } from './ReactUIView';\n\nlet id = 0;\n\ninterface IPortalViewState {\n  portals: {\n    [key: number]: ChildUIView;\n  };\n}\n\nexport interface ChildUIView {\n  childUIViewProps: IReactUIViewProps;\n  portalTarget: HTMLElement;\n}\n\n/**\n * This react component renders the AngularUIView react component\n * and also creates React Portals as needed for child React UIViews.\n */\nexport class PortalView extends React.PureComponent<UIViewProps, IPortalViewState> {\n  private $id = id++;\n  public state: IPortalViewState = { portals: [] };\n\n  private debug = (method: string, message: string, ...args) =>\n    debugLog('react', 'PortalView', `${this.$id}/${this.props['name']}`, method, message, ...args);\n\n  public componentWillUnmount() {\n    this.debug('.componentWillUnmount()', '');\n  }\n\n  createPortalToChildUIView = (uiViewId: number, childUIView: ChildUIView) => {\n    this.debug('.createPortalToChildUIView()', JSON.stringify(childUIView.childUIViewProps), childUIView.portalTarget);\n    this.setState(prev => {\n      const portals = { ...prev.portals, [uiViewId]: childUIView };\n      return { portals };\n    });\n  };\n\n  removePortalToChildUIView = (uiViewId: number) => {\n    const childUIView = this.state.portals[uiViewId] || ({} as ChildUIView);\n    this.debug('.removePortalToChildUIView()', `${uiViewId}`, childUIView.childUIViewProps, childUIView.portalTarget);\n    this.setState(prev => {\n      const portals = { ...prev.portals };\n      delete portals[uiViewId];\n      return { portals };\n    });\n  };\n\n  renderPortals() {\n    const { portals } = this.state;\n    const method = `.renderPortals()`;\n\n    Object.keys(portals).forEach(key => {\n      const portal = portals[key];\n      this.debug(method, `ReactDOM.createPortal(${key})`, '', portal.childUIViewProps, portal.portalTarget);\n    });\n\n    return Object.keys(portals).map(key => {\n      const portal = portals[key];\n      // No mechanism to provide a key when creating a portals array?\n      return (\n        <div style={{ display: 'none' }} key={`${key}`}>\n          {ReactDOM.createPortal(<ReactUIView {...portal.childUIViewProps} />, portal.portalTarget)}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    this.debug('.render()', '');\n\n    return (\n      <React.Fragment>\n        <AngularUIView {...this.props} portalView={this} />\n        {this.renderPortals()}\n      </React.Fragment>\n    );\n  }\n}\n"
  ]
}
{
  "version": 3,
  "file": "decorateUIRouterViewConfigs.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/react-hybrid/decorateUIRouterViewConfigs.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "import * as React from 'react';\nimport { hybridModule } from './angularjs/module';\nimport { PathNode, StateObject, UIRouter } from '@uirouter/core';\nimport { ReactViewConfig, ReactViewDeclaration } from '@uirouter/react';\n\nhybridModule.config([\n  '$uiRouterProvider',\n  (router: UIRouter) => {\n    const factory = (path: [PathNode], config: ReactViewDeclaration) => new ReactViewConfig(path, config);\n\n    // Add the react view config factory for react views\n    router.viewService._pluginapi._viewConfigFactory('react', factory);\n\n    // Decorate states at registration time with the view type\n    router.stateRegistry.decorator('views', (state: StateObject, parentDecorator) => {\n      const views = parentDecorator(state);\n\n      const self = state.self;\n      const selfViews = self.views || { $default: self };\n      const isReactComponent = cmp =>\n        cmp instanceof React.Component ||\n        (cmp && cmp.prototype && cmp.prototype.isReactComponent) ||\n        (cmp && cmp.prototype && typeof cmp.prototype.render === 'function') ||\n        (cmp && typeof cmp === 'function');\n\n      Object.keys(views).forEach(key => {\n        const view = views[key];\n        if (view.componentProvider) {\n          // If view component provider is given, monkey-patch the type in runtime.\n          const injectables = [...view.componentProvider];\n          // Remove the runner function, and just leave `injectables` with deps.\n          const func = injectables.pop();\n\n          const originalType = view.$type;\n          const originalComponent = view.component;\n          const originalExit = view.$context.onExit;\n          // Once the view exits, reset the view type, so `componentProvider` runs again.\n          if (!originalExit || !originalExit.$$__ui_router_react_view_fixer) {\n            const originalExitDeps = [...(originalExit || [])];\n            const originalExitFn = originalExitDeps.pop();\n\n            view.$context.onExit = [\n              ...originalExitDeps,\n              function(...args) {\n                if (view.$type !== originalType) {\n                  view.$type = originalType;\n                }\n\n                if (view.component !== originalComponent) {\n                  view.component = originalComponent;\n                }\n\n                if (typeof originalExitFn === 'function') {\n                  return originalExitFn(...args);\n                }\n              },\n            ];\n\n            // Only decorate the onExit once per state declaration.\n            view.$context.onExit.$$__ui_router_react_view_fixer = true;\n          }\n\n          // Create a new component provider.\n          view.componentProvider = [\n            // Original injectables.\n            ...injectables,\n            (...args) => {\n              // Get the component declaration.\n              const cmp = func(...args);\n              // Determine if it's react.\n              var reactType = isReactComponent(cmp) && 'react';\n              view.$type = selfViews[key].$type || reactType || view.$type;\n\n              if (view.$type === 'react') {\n                // Set the component, if it's react, as `ReactViewConfig` expects the `component`\n                // property.\n                view.component = cmp;\n              }\n              // Also return component for AngularjS components.\n              return cmp;\n            },\n          ];\n        } else {\n          var selfView = selfViews[key || '$default'];\n          var reactType = isReactComponent(view.component) && 'react';\n          view.$type = selfViews[key].$type || reactType || view.$type;\n        }\n      });\n\n      return views;\n    });\n  },\n]);\n"
  ]
}